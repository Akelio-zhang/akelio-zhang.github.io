<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LIFE CODER</title><link>https://akelio-zhang.github.io/</link><description>Recent content on LIFE CODER</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>2019-2022 Akelio All rights reserved.</copyright><lastBuildDate>Sun, 19 Mar 2023 18:00:00 +0800</lastBuildDate><atom:link href="https://akelio-zhang.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>我的P.A.R.A实践记录</title><link>https://akelio-zhang.github.io/posts/2023-%E6%88%91%E7%9A%84para%E5%AE%9E%E8%B7%B5/</link><pubDate>Sun, 19 Mar 2023 18:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2023-%E6%88%91%E7%9A%84para%E5%AE%9E%E8%B7%B5/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2023-%E6%88%91%E7%9A%84para%E5%AE%9E%E8%B7%B5/ -&lt;h1 id="我的para实践记录">我的P.A.R.A实践记录&lt;/h1>
&lt;h2 id="什么是para">什么是P.A.R.A&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>The P.A.R.A. (Projects, Areas, Resources, Archives) method is a method for organizing digital information.&lt;/strong>&lt;/p>
&lt;p>It was developed by &lt;a href="https://fortelabs.co/about-forte-labs">Forte Labs&lt;/a>, a company that creates content to help increase productivity through technology.&lt;/p>
&lt;p>&lt;img src="https://s2.loli.net/2023/03/19/8QDcPAhmZYqRLw6.png" alt="image.png|600">&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Project: 短期、长期项目，用于Area的&lt;strong>实践落地&lt;/strong>。&lt;/li>
&lt;li>Area: 关注的&lt;strong>核心领域与能力提升&lt;/strong>。&lt;/li>
&lt;li>Resource: 用于Area相关联的信息整理以及其他可能感兴趣的内容。&lt;/li>
&lt;li>Archive: 另外三项不活跃的内容移入这个地方，减少对活跃项目的干扰。&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;ul>
&lt;li>Data Collection: &lt;strong>Cubox&lt;/strong>
&lt;ul>
&lt;li>Send to Obsidian through &amp;ldquo;自定义动作&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Information Station and Writing: &lt;strong>Obsidian&lt;/strong>
&lt;ul>
&lt;li>Publish to github.io: A Python script to copy blog files to &lt;code>blog_source&lt;/code>&lt;/li>
&lt;li>Publish to Wechat Official Account: A web converter to make blog files suitable to wechat&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Knowledge Output: &lt;strong>github.io; Wechat Official Account&lt;/strong>.&lt;/li>
&lt;/ul>
- https://akelio-zhang.github.io/posts/2023-%E6%88%91%E7%9A%84para%E5%AE%9E%E8%B7%B5/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>软件工程师的能力</title><link>https://akelio-zhang.github.io/posts/2022-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Fri, 30 Dec 2022 23:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2022-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2022-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%83%BD%E5%8A%9B/ -&lt;p>&lt;em>网上看到的一则关于软件工程师的能力模型图，觉得非常通俗易懂，拿出来分享。若有版权问题，请联系。&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://akelio-zhang.github.io/images/ability-model.svg" alt="">&lt;/p>
&lt;ul>
&lt;li>基础
&lt;ul>
&lt;li>计算机知识体系&lt;/li>
&lt;li>软能力&amp;mdash;-沟通/协调/心理/个人管理&lt;/li>
&lt;li>业务能力&amp;mdash;-商业、业务降本增效&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>几个搞定
&lt;ul>
&lt;li>搞定事情&amp;mdash;-项目管理&lt;/li>
&lt;li>搞定代码&amp;mdash;-架构设计与自动化&lt;/li>
&lt;li>搞定机器&amp;mdash;-运维与监控（devops）&lt;/li>
&lt;li>搞定人员&amp;mdash;-团队建设&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
- https://akelio-zhang.github.io/posts/2022-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E8%83%BD%E5%8A%9B/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>CS自学 Roadmap</title><link>https://akelio-zhang.github.io/posts/2022-cs%E8%87%AA%E5%AD%A6-roadmap/</link><pubDate>Sun, 26 Jun 2022 12:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2022-cs%E8%87%AA%E5%AD%A6-roadmap/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2022-cs%E8%87%AA%E5%AD%A6-roadmap/ -&lt;h1 id="cs自学-roadmap">CS自学 Roadmap&lt;/h1>
&lt;blockquote>
&lt;p>这两年收集很多课程，也受到csdiy.wiki的启发，觉得整理一份自己觉得比较合适的roadmap，供大家参考。&lt;/p>
&lt;/blockquote>
&lt;h2 id="roadmap">Roadmap&lt;/h2>
&lt;ul>
&lt;li>快速版
&lt;ul>
&lt;li>CS61A + CS61B + CS61C&lt;/li>
&lt;li>这三个课程都来自于UCB，能让你最快判断自己是否适应CS的内容，并帮助你找到还不错的工作(maybe)。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>循序渐进版
&lt;ul>
&lt;li>入门
&lt;ul>
&lt;li>（&lt;a href="https://www.bilibili.com/video/BV1EW411u7th">Crash Course Computer Science&lt;/a>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据基础
&lt;ul>
&lt;li>微积分/线性代数/信息理论/概率统计/离散数学&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>基本原理
&lt;ul>
&lt;li>程序抽象
&lt;ul>
&lt;li>CS61A&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>计算机架构入门
&lt;ul>
&lt;li>（&lt;a href="https://www.coursera.org/learn/build-a-computer#syllabus">Build a Modern Computer from First Principles: From Nand to Tetris (Project-Centered Course) | Coursera&lt;/a>）&lt;/li>
&lt;li>15-213/CS61C&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据结构与算法
&lt;ul>
&lt;li>CS61B/6.006/普林斯顿红宝书&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>领域基础
&lt;ul>
&lt;li>通览
&lt;ul>
&lt;li>6.033&lt;/li>
&lt;li>6.NULL（工具课）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>操作系统
&lt;ul>
&lt;li>&lt;a href="http://jyywiki.cn/OS/2022/">操作系统：设计与实现@南京大学&lt;/a>/6.S081/CS162&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>网络
&lt;ul>
&lt;li>CS144&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据库
&lt;ul>
&lt;li>CS186(Java)/15-445(C++)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>分布式系统
&lt;ul>
&lt;li>6.824&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>编译原理
&lt;ul>
&lt;li>CS143&lt;/li>
&lt;li>(&lt;a href="https://craftinginterpreters.com/introduction.html">Introduction · Crafting Interpreters&lt;/a>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>高级课程
&lt;ul>
&lt;li>软件工程
&lt;ul>
&lt;li>6.031&lt;/li>
&lt;li>CS169&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>AI
&lt;ul>
&lt;li>CS188&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>图形学
&lt;ul>
&lt;li>GAMES101&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>信息安全
&lt;ul>
&lt;li>CS161&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TBD&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>领域分支
&lt;ul>
&lt;li>Theoretical computer science 
&lt;ul>
&lt;li>算法与数据结构 &lt;/li>
&lt;li>计算理论 &lt;/li>
&lt;li>信息与编码理论 &lt;/li>
&lt;li>编程语言理论 &lt;/li>
&lt;li>形式化方法formal methods &lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Computer systems计算机系统 
&lt;ul>
&lt;li>计算机架构与系统工程 ARCHITECTURE &lt;/li>
&lt;li>计算机性能分析 PERFORMANCE &lt;/li>
&lt;li>并发，并行，分布式系统 （DISTRIBUTED） &lt;/li>
&lt;li>计算机网络 （NETWORK） &lt;/li>
&lt;li>信息安全与加密 (SECURITY) &lt;/li>
&lt;li>数据库 （STORAGE） &lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Computer application  
&lt;ul>
&lt;li>图形学、可视化 &lt;/li>
&lt;li>人机交互 &lt;/li>
&lt;li>科学计算 &lt;/li>
&lt;li>AI &lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>软件工程
&lt;img src="https://s2.loli.net/2022/08/20/4tFMPhyqJpQLwEu.png" alt="image/Pasted-image-20220805140624.png">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;h3 id="course-table">Course Table&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>课程&lt;/th>
&lt;th>内容&lt;/th>
&lt;th>url&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>CS186&lt;/td>
&lt;td>数据库&lt;/td>
&lt;td>&lt;a href="http://cs186berkeley.net/fa20/">http://cs186berkeley.net/fa20/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>15-445&lt;/td>
&lt;td>数据库&lt;/td>
&lt;td>&lt;a href="https://www.bilibili.com/video/BV1f7411z7dw">https://www.bilibili.com/video/BV1f7411z7dw&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6.S081&lt;/td>
&lt;td>操作系统&lt;/td>
&lt;td>&lt;a href="https://www.bilibili.com/video/BV19k4y1C7kA">https://www.bilibili.com/video/BV19k4y1C7kA&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>rCore&lt;/td>
&lt;td>操作系统&lt;/td>
&lt;td>&lt;a href="https://rcore-os.github.io/rCore-Tutorial-Book-v3/index.html">https://rcore-os.github.io/rCore-Tutorial-Book-v3/index.html&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6.NULL&lt;/td>
&lt;td>基础&lt;/td>
&lt;td>&lt;a href="https://missing.csail.mit.edu/">https://missing.csail.mit.edu/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CS229T&lt;/td>
&lt;td>统计学习&lt;/td>
&lt;td>&lt;a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650754066&amp;amp;idx=1&amp;amp;sn=8dc9c75a1326ce885f594f8f9bca0ff9&amp;amp;chksm=871a886cb06d017af9ca42a381abc0fef218233ec6a7f5546061ccfeefa43f37453515a96320&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=1216s7HO0KtAYi06epv1ZBdV&amp;amp;sharer_sharetime=1639646339745&amp;amp;sharer_shareid=4f5e972d431ca863bcb02b778677068c#rd">斯坦福统计学习理论笔记：Percy Liang带你搞定「贼难」的理论基础 (qq.com)&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>15-213&lt;/td>
&lt;td>计算机系统基础&lt;/td>
&lt;td>&lt;a href="https://www.cs.cmu.edu/~213/">https://www.cs.cmu.edu/~213/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CS61A&lt;/td>
&lt;td>程序抽象&lt;/td>
&lt;td>&lt;a href="https://cs61a.org/">https://cs61a.org/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CS61B&lt;/td>
&lt;td>数据结构与算法&lt;/td>
&lt;td>&lt;a href="https://inst.eecs.berkeley.edu/~cs61b/sp22/">https://inst.eecs.berkeley.edu/~cs61b/sp22/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CS61C&lt;/td>
&lt;td>计算机体系结构&lt;/td>
&lt;td>&lt;a href="https://cs61c.org/sp22/">https://cs61c.org/sp22/&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="四大名校的课程推荐">四大名校的课程推荐&lt;/h3>
&lt;ul>
&lt;li>CMU
&lt;ul>
&lt;li>课程介绍：&lt;a href="http://coursecatalog.web.cmu.edu/schools-colleges/schoolofcomputerscience/undergraduatecomputerscience/#bscurriculumtextcontainer">Computer Science Program &amp;lt; Carnegie Mellon University (cmu.edu)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Berkeley
&lt;ul>
&lt;li>EECS培养方案地图，并且有前置关系：&lt;a href="https://hkn.eecs.berkeley.edu/courseguides">Eta Kappa Nu (HKN), Mu Chapter (berkeley.edu)&lt;/a>&lt;/li>
&lt;li>课程介绍：&lt;a href="https://www2.eecs.berkeley.edu/Courses/CS/">CS Courses | EECS at UC Berkeley&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>MIT
&lt;ul>
&lt;li>课程介绍：&lt;a href="http://student.mit.edu/catalog/m6a.html">Fall 2022 Course 6: Electrical Engineering and Computer Science (mit.edu)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Stanford
&lt;ul>
&lt;li>课程介绍：&lt;a href="https://cs.stanford.edu/academicz/courses">Courses | Stanford Computer Science&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
- https://akelio-zhang.github.io/posts/2022-cs%E8%87%AA%E5%AD%A6-roadmap/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>单元测试减少心智负担</title><link>https://akelio-zhang.github.io/posts/2022-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%87%8F%E5%B0%91%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85/</link><pubDate>Wed, 15 Jun 2022 12:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2022-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%87%8F%E5%B0%91%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2022-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%87%8F%E5%B0%91%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85/ -&lt;h1 id="单元测试减少心智负担">单元测试减少心智负担&lt;/h1>
&lt;hr>
&lt;h2 id="责任意识">责任意识&lt;/h2>
&lt;ul>
&lt;li>案例1: 错误的空判断，导致错误放款上百万；&lt;/li>
&lt;li>案例2: 使用本地环境打包，部署到线上环境后异常，官网无法访问；&lt;/li>
&lt;li>线上问题，第一责任人基本都是软件开发人员，不是测试、也不是运维人员；&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="什么是单元测试">什么是单元测试&lt;/h2>
&lt;ul>
&lt;li>在计算机编程中，单元测试（英语：Unit Testing）又称为模块测试  ，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。在过程化编程中，一个单元就是单个程序、函数、过程等；对于面向对象编程，最小单元就是方法，包括基类（超类）、抽象类、或者派生类（子类）中的方法。&lt;/li>
&lt;li>通常来说，程序员每修改一次程序就会进行最少一次单元测试，在编写程序的过程中前后很可能要进行多次单元测试，以证实程序达到软件规格书要求的工作目标，没有程序错误；虽然单元测试不是必须的，但也不坏，这牵涉到项目管理的政策决定。&lt;/li>
&lt;li>每个理想的测试案例独立于其它案例；为测试时隔离模块，经常使用stubs、mock或fake等测试马甲程序。单元测试通常由软件开发人员编写，用于确保他们所写的代码符合软件需求和遵循开发目标。它的实施方式可以是非常手动的（透过纸笔），或者是做成构建自动化的一部分。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="为什么要做单元测试">为什么要做单元测试&lt;/h2>
&lt;ul>
&lt;li>保证功能的正确性；&lt;/li>
&lt;li>适应于代码改造、重构；&lt;/li>
&lt;li>对功能的一种文档记录（包括一次BUG，对应一个单元测试）&lt;/li>
&lt;li>从使用者的角度先行设计（参考——测试驱动开发TDD）&lt;/li>
&lt;li>收益
&lt;ul>
&lt;li>更短的修复时间&lt;/li>
&lt;li>更少的开发成本&lt;/li>
&lt;li>更高的代码质量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="哪些代码要做单元测试">哪些代码要做单元测试&lt;/h2>
&lt;ul>
&lt;li>最理想，100%的代码覆盖率以及分支覆盖率。
&lt;ul>
&lt;li>覆盖率好不等价于代码合格&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>时间有限
&lt;ul>
&lt;li>核心功能代码&lt;/li>
&lt;li>逻辑复杂的代码&lt;/li>
&lt;li>分支较多的代码&lt;/li>
&lt;li>数据状态变化较多的代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="怎么做单元测试">怎么做单元测试&lt;/h2>
&lt;ul>
&lt;li>从一个Java程序开始&lt;/li>
&lt;li>怎么做Spring容器的单元测试？
&lt;ul>
&lt;li>@SpringBootTest&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据库数据怎么办？
&lt;ul>
&lt;li>@DbUnit&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="单元测试的建议">单元测试的建议&lt;/h2>
&lt;ul>
&lt;li>日志或者System.out.println对测试无意义&lt;/li>
&lt;li>如依赖数据库，建议使用非测试数据库，并用spring-test-dbunit来做数据初始化准备。&lt;/li>
&lt;li>如依赖外部接口，建议有相应的测试接口，保证其接口输入与响应保持一致性&lt;/li>
&lt;li>了解一下测试驱动开发，能提高对代码可测试性、模块设计的理解。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">单元测试&lt;/a> &lt;a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">-&lt;/a> &lt;a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">维基百科，自由的百科全书&lt;/a> &lt;a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">(&lt;/a>&lt;a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">wikipedia.org)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/okmWMOeBm7cCIZ1zzFr4KQ">从头到脚说单测&lt;/a>&lt;a href="https://mp.weixin.qq.com/s/okmWMOeBm7cCIZ1zzFr4KQ">——&lt;/a>&lt;a href="https://mp.weixin.qq.com/s/okmWMOeBm7cCIZ1zzFr4KQ">谈有效的单元测试&lt;/a> &lt;a href="https://mp.weixin.qq.com/s/okmWMOeBm7cCIZ1zzFr4KQ">(&lt;/a>&lt;a href="https://mp.weixin.qq.com/s/okmWMOeBm7cCIZ1zzFr4KQ">qq.com)&lt;/a>&lt;/li>
&lt;li>关键词
&lt;ul>
&lt;li>测试开发&lt;/li>
&lt;li>JUnit, xUNit, dbUnit&lt;/li>
&lt;li>SpringBooTest&lt;/li>
&lt;li>Mock, spy, stub&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
- https://akelio-zhang.github.io/posts/2022-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%87%8F%E5%B0%91%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>读书笔记--用数据讲故事</title><link>https://akelio-zhang.github.io/posts/2022-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%94%A8%E6%95%B0%E6%8D%AE%E8%AE%B2%E6%95%85%E4%BA%8B/</link><pubDate>Fri, 15 Apr 2022 12:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2022-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%94%A8%E6%95%B0%E6%8D%AE%E8%AE%B2%E6%95%85%E4%BA%8B/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2022-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%94%A8%E6%95%B0%E6%8D%AE%E8%AE%B2%E6%95%85%E4%BA%8B/ -&lt;h1 id="读书笔记--用数据讲故事">读书笔记&amp;ndash;用数据讲故事&lt;/h1>
&lt;ul>
&lt;li>第二章 选择有效的图表
&lt;ul>
&lt;li>图表类型
&lt;ul>
&lt;li>简单文本&lt;/li>
&lt;li>表格（不利于展示你的观点）
&lt;ul>
&lt;li>热力图&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>点图
&lt;ul>
&lt;li>散点图（往往需要配合辅助线、辅助文本）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>线图
&lt;ul>
&lt;li>折线图（可以增加最大值、最小值的同图展示）&lt;/li>
&lt;li>斜率图&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>条形图
&lt;ul>
&lt;li>直方图（竖直条形图）&lt;/li>
&lt;li>堆叠竖直条形图（一般是最下一层能够比较有效对比）&lt;/li>
&lt;li>瀑布图&lt;/li>
&lt;li>水平条形图（适合阅读，分类标签可以很长）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>面积图&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>图表使用建议
&lt;ul>
&lt;li>不要使用饼图&lt;/li>
&lt;li>不要使用3D图&lt;/li>
&lt;li>尽量不要使用双Y轴&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>第三章 杂乱是你的敌人&lt;/li>
&lt;li>第四章 聚焦受众的视线（引导到核心的数据）
&lt;ul>
&lt;li>前属性&lt;/li>
&lt;li>颜色&lt;/li>
&lt;li>大小&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>第五章 像设计师一样思考（通过可视化，让读者观众明白你的结论，第四章的升级版）
&lt;ul>
&lt;li>可供性
&lt;ul>
&lt;li>突出重要内容&lt;/li>
&lt;li>消除干扰&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>无障碍
&lt;ul>
&lt;li>不要过于复杂&lt;/li>
&lt;li>擅长使用文字突出结论&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>美观&lt;/li>
&lt;li>接受度&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
- https://akelio-zhang.github.io/posts/2022-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%94%A8%E6%95%B0%E6%8D%AE%E8%AE%B2%E6%95%85%E4%BA%8B/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>决策引擎 Note</title><link>https://akelio-zhang.github.io/posts/2022-%E5%86%B3%E7%AD%96%E5%BC%95%E6%93%8E-note/</link><pubDate>Fri, 25 Mar 2022 12:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2022-%E5%86%B3%E7%AD%96%E5%BC%95%E6%93%8E-note/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2022-%E5%86%B3%E7%AD%96%E5%BC%95%E6%93%8E-note/ -&lt;h1 id="决策引擎-note">决策引擎 Note&lt;/h1>
&lt;ul>
&lt;li>开场
&lt;ul>
&lt;li>常见的引擎有哪些？
&lt;ul>
&lt;li>游戏、模板、规则、决策；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>引擎是一套通用的软件解决方案，基于引擎，可以实现一类相似的业务需求；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>决策引擎是什么？
&lt;ul>
&lt;li>如果用最简单的说，对某一类型的事件进行加工处理后得到一个决策结果；&lt;/li>
&lt;li>从这句话看起来，和规则引擎很像，确实很像，或者说决策引擎是一种高级的规则引擎（是基于规则引擎的提升改造以适应更加复杂的流程）；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>怎么会自己开发出一个决策引擎
&lt;ul>
&lt;li>罗列业务上的诉求&lt;/li>
&lt;li>时间线&lt;/li>
&lt;li>所以一个东西并不是一蹴而就的，也是因为业务的复杂逐渐提升，引擎也在随之提升变化&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如何设计
&lt;ul>
&lt;li>原则
&lt;ul>
&lt;li>组合&amp;gt;继承&lt;/li>
&lt;li>单一责任&lt;/li>
&lt;li>每一个类应该和尽可能少的类交互，对象的层次设计&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>主要对象
&lt;ul>
&lt;li>Filter&lt;/li>
&lt;li>TaskNode&lt;/li>
&lt;li>Task&lt;/li>
&lt;li>FlowEngine&lt;/li>
&lt;li>IFlowContext&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>效果
&lt;ul>
&lt;li>代码工程可读性、可测试性（可维护性）强；&lt;/li>
&lt;li>不同决策模型均适应&lt;/li>
&lt;li>易扩展
&lt;ul>
&lt;li>方便查问题（日志落表与业务逻辑完全解耦）&lt;/li>
&lt;li>可以在大数据环境运行（不基于Spring）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>应用
&lt;ul>
&lt;li>同业预警财务模型V2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>未来规划
&lt;ul>
&lt;li>支持并发&lt;/li>
&lt;li>支持节点超时配置&lt;/li>
&lt;li>前端展示转换层，配置与执行流可视化，便于运维&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>启示
&lt;ul>
&lt;li>原型能力
&lt;ul>
&lt;li>从规则引擎&amp;ndash;&amp;gt;规则引擎V2&amp;ndash;&amp;gt;决策引擎&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>产品需要打磨&lt;/li>
&lt;li>其他&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
- https://akelio-zhang.github.io/posts/2022-%E5%86%B3%E7%AD%96%E5%BC%95%E6%93%8E-note/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>LeetCode 刷题指南</title><link>https://akelio-zhang.github.io/posts/2022-leetcode-%E5%88%B7%E9%A2%98%E6%8C%87%E5%8D%97/</link><pubDate>Fri, 18 Feb 2022 18:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2022-leetcode-%E5%88%B7%E9%A2%98%E6%8C%87%E5%8D%97/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2022-leetcode-%E5%88%B7%E9%A2%98%E6%8C%87%E5%8D%97/ -&lt;h1 id="leetcode-刷题指南">LeetCode 刷题指南&lt;/h1>
&lt;h2 id="刷题的意义">“刷题”的意义&lt;/h2>
&lt;p>刷题确实可能会让非常多人嗤之以鼻，但是没有办法，这一切都是市场决定的。如果要在这个市场生存，你只有两个选择，适应这条规则或者打破这条规则。如果我们可以打破这条规则，那说明我们拥有更大的价值，这当然很好。但是对于大多数人而言，可能或多或少会得刷一刷题。刷题一方面能让我们面试通过，另一方面也在过程中重温一些基础知识（可以不用再面对繁冗复杂的业务诉求）。&lt;/p>
&lt;h2 id="如何刷">如何刷&lt;/h2>
&lt;p>笔者自己是从两条线分别出发刷题。一，按数据结构类型；二，按算法策略。从这两条线组织刷题顺序可以帮我们更快地构建起题与知识的映射关系。其实在面试解题过程中，关键要解决的就是破除题目本身的外壳，发现本质问题，属于什么类型的问题，需要用怎么样的数据结构与算法来解决。&lt;/p>
&lt;p>现在LeetCode刷题已经非常方便了，并且本身社区也比较活跃。但是，额外的一些参考书籍对于我们的帮助也会非常大。下面罗列两本LeetCode题解。第一本101，是采用C++解题的，这本书的算法写的很容易理解，不像LC社区中很多人追求花哨——一行解题，意义不是很大。在面试过程，清晰的算法过程也是会给面试官比较好的音响。另一本Go写的题解，追求是算法性能，可以给我们拓宽思路，因为一道题解出来现在可能已经不是100分了，最佳的性能会让我们的面试更加突出。&lt;/p>
&lt;h2 id="leetcode-题解参考">LeetCode 题解参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://www.changgy.com/leetcode-101">Doing positive things. - LeetCode 101 (changgy.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://books.halfrost.com/leetcode/">序 | LeetCode Cookbook (halfrost.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="算法参考书">算法参考书&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>⭐&lt;a href="https://algs4.cs.princeton.edu/home/">Algorithms, 4th Edition by Robert Sedgewick and Kevin Wayne (princeton.edu)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.algorist.com/">The Algorithm Design Manual (algorist.com)&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>⭐&lt;a href="https://jeffe.cs.illinois.edu/teaching/algorithms/#book">Algorithms by Jeff Erickson (illinois.edu)&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
- https://akelio-zhang.github.io/posts/2022-leetcode-%E5%88%B7%E9%A2%98%E6%8C%87%E5%8D%97/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>MacBook Pro到手设置</title><link>https://akelio-zhang.github.io/posts/2022-macbook-pro-%E5%88%B0%E6%89%8B%E8%AE%BE%E7%BD%AE/</link><pubDate>Thu, 10 Feb 2022 12:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2022-macbook-pro-%E5%88%B0%E6%89%8B%E8%AE%BE%E7%BD%AE/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2022-macbook-pro-%E5%88%B0%E6%89%8B%E8%AE%BE%E7%BD%AE/ -&lt;h1 id="macbook-pro到手设置">MacBook Pro到手设置&lt;/h1>
&lt;h2 id="效率">效率&lt;/h2>
&lt;ol>
&lt;li>Office 365, Microsoft edge, Onedrive, Todo, Outlook&lt;/li>
&lt;li>Xmind&lt;/li>
&lt;li>Cubox&lt;/li>
&lt;li>Typora&lt;/li>
&lt;li>Sketch&lt;/li>
&lt;/ol>
&lt;h2 id="开发者">开发者&lt;/h2>
&lt;ol>
&lt;li>Homebrew, &lt;a href="https://brew.idayer.com/guide/">https://brew.idayer.com/guide/&lt;/a>
&lt;ol>
&lt;li>Stats&lt;/li>
&lt;li>Alfred&lt;/li>
&lt;li>Item2+ayu&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>VS code
&lt;ol>
&lt;li>extension
&lt;ol>
&lt;li>copilot&lt;/li>
&lt;li>tabnine&lt;/li>
&lt;li>wakatime&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Terminal (item2)
&lt;ol>
&lt;li>&lt;a href="https://wyydsb.xin/Operations/terminal.html#zsh-sh">https://wyydsb.xin/Operations/terminal.html#zsh-sh&lt;/a>&lt;/li>
&lt;li>Zsh-syntax-highlighting&lt;/li>
&lt;li>Zsh-autosuggestions&lt;/li>
&lt;li>Fzf with vim plugin&lt;/li>
&lt;li>vimrc + vim plug&lt;/li>
&lt;li>tabnine by coc.nvim&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Java
&lt;ol>
&lt;li>JetBrains IDEA
&lt;ol>
&lt;li>extensions same as vs code.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>JDK (&lt;a href="https://www.azul.com/downloads/?os=macos&amp;amp;architecture=arm-64-bit&amp;amp;package=jdk">Java Download | Java 8, Java 11, Java 13 - Linux, Windows &amp;amp; macOS (azul.com)&lt;/a>)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Go
&lt;ol>
&lt;li>brew install golang&lt;/li>
&lt;li>go proxy setup&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>KX
    1. Clash X Pro: &lt;a href="https://github.com/yichengchen/clashX">https://github.com/yichengchen/clashX&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="娱乐">娱乐&lt;/h2>
&lt;ol>
&lt;li>iina&lt;/li>
&lt;li>wechat&lt;/li>
&lt;/ol>
&lt;h2 id="设置">设置&lt;/h2>
&lt;ol>
&lt;li>Hot corner&lt;/li>
&lt;li>程序坞的大小与缩小&lt;/li>
&lt;li>Apple Watch 解锁&lt;/li>
&lt;li>触控板手势&lt;/li>
&lt;li>iCloud 设置&lt;/li>
&lt;li>桌面使用叠放&lt;/li>
&lt;li>finder 显示状态栏&lt;/li>
&lt;/ol>
&lt;h2 id="远程控制">远程控制&lt;/h2>
&lt;ol>
&lt;li>teamviewer—&amp;gt;todesk—&amp;gt;rustdesk&lt;/li>
&lt;/ol>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zhuye.notion.site/Macbook-M1-9c908ba2946440aeb02d63609c9990ae">Macbook环境配置（含M1） (notion.site)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rualc.com/workspace/mac/#brew">Mac 环境（M1 + Monterey） | 前端指南 (rualc.com)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1sD4y1X7MQ">学生党M1 Mac入门指北_哔哩哔哩_bilibili&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=67keaaWOKzE">Mac Tutorial for Beginners - Switching from Windows to macOS - YouTube&lt;/a>&lt;/li>
&lt;/ol>
- https://akelio-zhang.github.io/posts/2022-macbook-pro-%E5%88%B0%E6%89%8B%E8%AE%BE%E7%BD%AE/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>Notion结束文字工作站的选择纠结</title><link>https://akelio-zhang.github.io/posts/2021-notion/</link><pubDate>Thu, 27 Jan 2022 12:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2021-notion/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/2021-notion/ -&lt;h2 id="0x1-使用过的方案">0x1 使用过的方案&lt;/h2>
&lt;ol>
&lt;li>有道云笔记（markdown支持太弱）&lt;/li>
&lt;li>Microsoft Todo（不太适合大量文字记载）&lt;/li>
&lt;li>语雀（不适合临时想法记录）&lt;/li>
&lt;li>Typora/VS Code + Onedrive（文件之间的关联比较麻烦，没有统一的入口）&lt;/li>
&lt;li>微信公众号（不适合个人内容记载，且使用起来比较麻烦，适合做推广）&lt;/li>
&lt;/ol>
&lt;h2 id="0x2-场景整理">0x2 场景整理&lt;/h2>
&lt;p>问题的解决方案往往要追溯到需求本身，不然只是在为了使用而使用，缺乏了创造力。&lt;/p>
&lt;ol>
&lt;li>工作上对项目、系统的设计、开发、运维的文档落地与持续运维追踪。&lt;/li>
&lt;li>读书笔记记录。&lt;/li>
&lt;li>CS一些技术的学习笔记。&lt;/li>
&lt;li>生活的一些行程安排或记录。&lt;/li>
&lt;li>Todo List。&lt;/li>
&lt;/ol>
&lt;h2 id="0x3-notion最大好处就是all-in-one">0x3 Notion，最大好处就是ALL IN ONE。&lt;/h2>
&lt;ol>
&lt;li>良好的Markdown支持&lt;/li>
&lt;li>UI符合我的审美需求&lt;/li>
&lt;li>能够支持大量文字输入&lt;/li>
&lt;li>因为是web，天生跨平台&lt;/li>
&lt;li>block，database，link的设计，能够满足绝大部分的知识库使用场景（场景2-4）&lt;/li>
&lt;li>支持项目管理，可部分替代teambition（场景1）&lt;/li>
&lt;li>支持Todo，可部分替代todo app（场景5）&lt;/li>
&lt;li>有些遗憾
&lt;ol>
&lt;li>所有数据在线，尽管有了Github的备份和导出，但是没有一套本地持久化的方案总觉得并不安心。&lt;/li>
&lt;li>没有标签系统&lt;/li>
&lt;li>不支持快速的外部文章导入&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="0x4-目前的文字工作方式">0x4 目前的文字工作方式&lt;/h2>
&lt;ol>
&lt;li>DASHBOARD是所有内容的入口。&lt;/li>
&lt;li>DASHBOARD展示的内容尽可能少，一般就是日常要做的、工作追踪、学习提升的三个入口。&lt;/li>
&lt;li>Notion主要做有一些计划性的、需要有结果输出的文字工作。
&lt;ol>
&lt;li>每天使用Github进行备份&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[H1]Todo来承载一些紧急类的工作记录（往往重要性不会太强）【可以用便利贴替代】&lt;/li>
&lt;li>[H2]Xmind承担思维脑图，基本无可替代，数据用Onedrive管理。&lt;/li>
&lt;li>[H3]备忘录只做个人信息备忘录，待办事项直接用todo/cubox解决。&lt;/li>
&lt;li>[IN]cubox承载信息流的记录（手机、PC浏览器），替代之前的微信收藏、知乎收藏。&lt;/li>
&lt;li>[OUT]微信公众号、知乎专栏用来做对外输出。（Notion本身也提供了链接分享，但是有墙，并没有什么x用）&lt;/li>
&lt;li>&lt;del>放弃语雀&lt;/del>，是因为流量还是小了一点。&lt;/li>
&lt;li>&lt;del>Onenote暂时处于停止使用的状态&lt;/del>，主要原因是格式版本比较心累，markdown不好用，跨平台能力有限。但是对于一些图、画较多的场景，Onenote有他自由排版的优势。&lt;/li>
&lt;li>当然，目前在使用Notion还有一些不舒服的地方：1）DASHBOARD呈现的内容过多，会分散注意力；2）Notion中很多已经完成的内容，目前只是简单放在database置为完成状态，或者移入存档Page。这些内容在较长不会做更新，却依旧占据了较多的篇幅，也会分散注意力。目前使用toggle或者database filter来隐藏。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://s2.loli.net/2022/08/20/IG97nj3AkKQacL2.png" alt="/images/notion-station.webp">&lt;/p>
- https://akelio-zhang.github.io/posts/2021-notion/ - 2019-2022 Akelio All rights reserved.</description></item><item><title>About Me</title><link>https://akelio-zhang.github.io/posts/about-me/</link><pubDate>Wed, 26 Jan 2022 18:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/about-me/</guid><description>LIFE CODER https://akelio-zhang.github.io/posts/about-me/ -&lt;blockquote>
&lt;p>绝大多数软件都为生产活动在数字世界的投射。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Coder &amp;amp; Photographer&lt;/strong>&lt;/p>
&lt;h2 id="我的设备">我的设备&lt;/h2>
&lt;p>[工作]&lt;/p>
&lt;ul>
&lt;li>Computing
&lt;ul>
&lt;li>Macbook Pro (M1 Pro + 32G), Year 2022&lt;/li>
&lt;li>*PC (i7-8700 + 32G + GTX 1066), Year 2020&lt;/li>
&lt;li>*NUC 11 (16G) for ESXi (Homelab: win10 + Manjaro), Year 2021&lt;/li>
&lt;li>*QNAP T453D mini with (512G + 256G + 4T), Year 2021&lt;/li>
&lt;li>*ThinkPad T460s (i7-6600U + 8G), Year 2016&lt;/li>
&lt;li>*RaspBerry 3 (for scheduling), Year 2015&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Monitor
&lt;ul>
&lt;li>*Dell 2720Q, Year 2020&lt;/li>
&lt;li>*Dell 2414H, Year 2015&lt;/li>
&lt;li>Dell 2520DR, Year 2020&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Keyboard
&lt;ul>
&lt;li>Max Keys&lt;/li>
&lt;li>*Filco 87 Black&lt;/li>
&lt;li>Anne Pro II&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Mouse
&lt;ul>
&lt;li>*GPW&lt;/li>
&lt;li>G304&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Speaker
&lt;ul>
&lt;li>*Bose SoundLink Resolve&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Lighter
&lt;ul>
&lt;li>*BenQ ScreenBar Halo&lt;/li>
&lt;li>Xiaomi ScreenBar&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>star(*) for home use&lt;/li>
&lt;/ul>
&lt;p>[生活]&lt;/p>
&lt;ul>
&lt;li>Computing
&lt;ul>
&lt;li>iPhone 14 Pro Max (256G), Year 2022&lt;/li>
&lt;li>iPhone X (64G), Year 2018&lt;/li>
&lt;li>iPad Pro 2019 12.9', Year 2019&lt;/li>
&lt;li>[[Homelab方案]], Year 2021&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Speaker &amp;amp; Headphone
&lt;ul>
&lt;li>Year 2022, Marshall Stanmore II&lt;/li>
&lt;li>Year 2020, Airpods Pro&lt;/li>
&lt;li>Year 2017, Bose QC30&lt;/li>
&lt;li>Year 2016, Sony 1A-DAC&lt;/li>
&lt;li>Year 2015, Sennheiser MOMENTUM&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Camera
&lt;ul>
&lt;li>Year 2013, Fujifilm X10&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Game Station
&lt;ul>
&lt;li>Year 2022, PlayStation 5&lt;/li>
&lt;li>Year 2018, Nintendo Switch&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>[过往]&lt;/p>
&lt;ul>
&lt;li>Year 2020, iPhone 11 Pro Max (256G)&lt;/li>
&lt;li>Year 2019, LG UL650&lt;/li>
&lt;li>Year 2018, PC(i5-8400 + 16G + GTX 1066)&lt;/li>
&lt;li>Year 2015, PC(E3-1230v3 + 16G + AMD 380X)&lt;/li>
&lt;li>Year 2015, iPhone 6&lt;/li>
&lt;li>Year 2013, Macbook Air 2013&lt;/li>
&lt;li>Year 2013, Samsumg WinPhone&lt;/li>
&lt;li>Year 2012, Meizu&lt;/li>
&lt;li>Year 2011, PC(i3-2100 + 8G + AMD graphic card)&lt;/li>
&lt;li>Year 2011, Sony VAIO Laptop&lt;/li>
&lt;li>Year 2011, Nikon D90&lt;/li>
&lt;li>Year 2010, iPhone 3Gs&lt;/li>
&lt;li>Year 2005, Lenovo PC&lt;/li>
&lt;/ul>
&lt;h2 id="我的自动化">我的自动化&lt;/h2>
&lt;ul>
&lt;li>Github: awesome-list&lt;/li>
&lt;li>Github: notion-backup&lt;/li>
&lt;li>Github: blog deploy by hugo when push&lt;/li>
&lt;li>iOS: Apple Watch (wakeup; 9:00; arrive at home)&lt;/li>
&lt;li>iOS: clock switch (by Calendar)&lt;/li>
&lt;li>iOS: wife&amp;rsquo;s clock (by feishu Calendar)&lt;/li>
&lt;/ul>
&lt;h2 id="我的存储">我的存储&lt;/h2>
&lt;ol>
&lt;li>OneDrive（文档，扫描件）&lt;/li>
&lt;li>&lt;del>坚果云&lt;/del>（存量 books与文献）&lt;/li>
&lt;li>阿里云盘（相册）&lt;/li>
&lt;li>百度网盘（各类资源）&lt;/li>
&lt;/ol>
&lt;h2 id="联系我">联系我&lt;/h2>
&lt;ol>
&lt;li>Gmail&lt;/li>
&lt;li>Outlook&lt;/li>
&lt;li>&lt;a href="https://github.com/Akelio-zhang">Github&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Last edited on 2022/10/22&lt;/p>
- https://akelio-zhang.github.io/posts/about-me/ - 2019-2022 Akelio All rights reserved.</description></item></channel></rss>