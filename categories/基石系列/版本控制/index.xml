<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>基石系列/版本控制 on LIFE CODER</title><link>https://akelio-zhang.github.io/categories/%E5%9F%BA%E7%9F%B3%E7%B3%BB%E5%88%97/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</link><description>Recent content in 基石系列/版本控制 on LIFE CODER</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>2019-2022 Akelio All rights reserved.</copyright><atom:link href="https://akelio-zhang.github.io/categories/%E5%9F%BA%E7%9F%B3%E7%B3%BB%E5%88%97/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>Git指南</title><link>https://akelio-zhang.github.io/posts/2021-git%E6%8C%87%E5%8D%97/</link><pubDate>Mon, 03 Jan 2022 18:00:00 +0800</pubDate><guid>https://akelio-zhang.github.io/posts/2021-git%E6%8C%87%E5%8D%97/</guid><description>Git指南 零、目的 掌握各类场景下如何更好使用Git。 减少因为代码提交问题带来的生产环境问题。 一、了解[[Git]] 什么是Git？ 1. 一款分布式版本管理系统 2. 优点：分布式、性能、版本的文件完整性 1. 分布式，可以让你在本地提交代码（对于SVN而言没有网络就无法提交代码，在家也能愉快地写代码）； 2. 性能，对于我们的一般项目而言，你感受不到合并时性能的差别（与SVN比较）； 3. 版本的文件完整性：git背后设计理念是快照思想。 Git概念 1. 仓库(repository) 1. 用于代码版本管理 2. 一个git仓库管理了三棵“树”，分别是 1. Working Directory（工作目录） 2. Index（暂存区） 3. HEAD（本地仓库） 3. 大多数时候你通过编辑器只能对工作目录操作，操作其他两个“树”（区域）必须使用git命令才可以。 2. 分支(branch) 1. 用于并行独立开发，更方便管理不同开发任务的进度 Git常用命令 1. git add 2. git commit 3. git push 4. git pull 5. git branch 6. git switch 7. git restore 二、最常见的一种使用场景 陈主管说他已经开发好了整个架构，需要我去把几个功能实现一下，并提交到dev分支让他方便Review。
基本流程 1. 先从远程服务器把代码拉到本地：git clone http://197.</description></item></channel></rss>